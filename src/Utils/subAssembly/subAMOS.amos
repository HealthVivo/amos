#!/fs/sz-user-supported/Linux-x86_64/bin/runAmos -C
# $Revision$ 

#? subAMOS.amos - Pipeline for extracting a subset of scaffolds/contigs & all related
#?                information (unitigs, reads, mate pairing) from an AMOS .afg file

#? Usage:
#?         subAMOS.amos prefix \
#?                 \ -D AFG    = prefix.afg             : afg file
#?                 \ -D AFG_FILTER = prefix.afg.filter  : 3 column TAB delim. file that contains: MSG, MSG_iid, MSG_eid 
#?                                                        MSG=SCF|CTG
#?                                                        MSG_iid|MSG_eid is required; missing values are represented as "."

#? Input:
#? 	prefix.afg.filter example:
#?	#MSG	iid	eid
#?	SCF     .     7180000001353
#?	SCF     .     7180000001354
#?	SCF     .     7180000001355
#?	...

#? Output: 
#?         prefix.filter.afg : filtered afg file
#?         prefix.filter.bnk/: bank directory

#--------------------------------------- USER DEFINED VALUES ------------------#

# AMOS package directory
BINDIR    = /fs/sz-user-supported/Linux-x86_64/bin/

# script directory
SCRIPTDIR = ~dpuiu/bin/subAssembly

AFG        = $(PREFIX).afg
AFG_FILTER = $(AFG).filter
AFG_INFO   = $(AFG).info 
AFG_MAP    = $(AFG).map

FILTER      = $(PREFIX).filter
FILTER_AFG  = $(FILTER).afg
FILTER_BNK  = $(FILTER).bnk

INPUTS     = $(AFG) $(AFG_FILTER)
OUTPUTS    = $(FILTER_AFG) $(FILTER_BNK)
#------------------------------------------------------------------------------#

# ## Testing input files
# 0: test -f $(AFG) 
# 1: test -f $(AFG_FILTER) 

## Getting afg info and map 
10: $(SCRIPTDIR)/AMOS2info.pl < $(AFG) > $(AFG_INFO)
20: $(SCRIPTDIR)/AMOS2map.pl  < $(AFG) > $(AFG_MAP) 

#------------------------------------------------------------------------------#

## Getting related asm messages 
100: $(SCRIPTDIR)/intersect2.pl $(AFG_MAP) $(AFG_FILTER) > $(AFG_FILTER).all

## Getting related asm messages offset
110: egrep "^UNV|^LIB" $(AFG_INFO) > $(AFG_FILTER).all.info
111: $(SCRIPTDIR)/intersect1.pl $(AFG_INFO) $(AFG_FILTER).all >> $(AFG_FILTER).all.info

## Filtering asm file
120: $(SCRIPTDIR)/subMsg.pl -f $(AFG_FILTER).all.info  < $(AFG) >  $(FILTER).tmp.afg

## Assigning new CTG/SCF iid's staring from 1 & generating afg file
200: cat $(AFG_FILTER).all | egrep "^CTG|^SCF" |  sort -k1 -nk2 | perl -ane 'print $F[0],"\t",$F[1],"\t",++$i,"\n";' > $(AFG_FILTER).iid
210: $(SCRIPTDIR)/newAMOSiids.pl -f $(AFG_FILTER).iid < $(FILTER).tmp.afg > $(FILTER_AFG)

## Generating bank directory
219: rm -fr $(FILTER_BNK)
220: $(BINDIR)/bank-transact -c -b $(FILTER_BNK) -m $(FILTER_AFG)
